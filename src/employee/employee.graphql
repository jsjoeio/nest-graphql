directive @isAuthenticated on QUERY | FIELD_DEFINITION
directive @hasRole(oneOf: [String!]) on QUERY | FIELD_DEFINITION

type Query {
  employees: [Employee]
  employee(id: ID!): Employee
}

type Mutation {
  createEmployee(createEmployeeInput: CreateEmployeeInput): Employee!
    @hasRole(oneOf: ["employee"])
  updateEmployee(updateEmployeeInput: UpdateEmployeeInput): Employee!
    @hasRole(oneOf: ["employee"])
  deleteEmployee(
    deleteEmployeeInput: DeleteEmployeeInput
  ): DeleteEmployeePayload! @hasRole(oneOf: ["employee"])
}

type Employee {
  id: Int
  name: String
}

type DeleteEmployeePayload {
  deleted: Boolean!
}

input CreateEmployeeInput {
  name: String!
}

input UpdateEmployeeInput {
  id: Int!
  name: String!
}

input DeleteEmployeeInput {
  id: Int!
}
